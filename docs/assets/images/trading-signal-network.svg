<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 700 1100" style="background: transparent;">
  <defs>
    <style>
      .title { font: bold 16px monospace; fill: #e0e0e0; }
      .node-title { font: bold 11px monospace; fill: #bb86fc; }
      .label { font: 10px monospace; fill: #e0e0e0; }
      .detail { font: 9px monospace; fill: #888; font-style: italic; }
      .beta-box { fill: #2d3d4d; stroke: #03dac6; stroke-width: 2; }
      .alpha-box { fill: #3d2d4d; stroke: #bb86fc; stroke-width: 2; }
      .join-box { fill: #2d4d3d; stroke: #4daf50; stroke-width: 2; }
      .neg-box { fill: #4d2d2d; stroke: #cf6679; stroke-width: 2; }
      .prod-box { fill: #4d4d2d; stroke: #ffa500; stroke-width: 2; }
      .arrow { stroke: #03dac6; stroke-width: 2; fill: none; marker-end: url(#arrowhead-beta); }
      .arrow-alpha { stroke: #bb86fc; stroke-width: 2; fill: none; marker-end: url(#arrowhead-alpha); }
    </style>
    <marker id="arrowhead-beta" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto">
      <polygon points="0 0, 10 3, 0 6" fill="#03dac6" />
    </marker>
    <marker id="arrowhead-alpha" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto">
      <polygon points="0 0, 10 3, 0 6" fill="#bb86fc" />
    </marker>
  </defs>

  <!-- Title -->
  <text x="350" y="30" class="title" text-anchor="middle">Trading Signal Network</text>
  <text x="350" y="50" class="detail" text-anchor="middle">3-condition rule with negation and variable bindings</text>

  <!-- Root Beta Memory -->
  <rect x="200" y="80" width="300" height="60" class="beta-box" rx="5"/>
  <text x="350" y="105" class="node-title" text-anchor="middle">Root Beta Memory</text>
  <text x="350" y="125" class="label" text-anchor="middle">[Token(parent: nil, fact: nil)]</text>

  <!-- Arrow to JoinNode1 -->
  <path d="M 280 140 L 280 190" class="arrow"/>

  <!-- AlphaMemory(:stock) on right -->
  <rect x="520" y="150" width="160" height="80" class="alpha-box" rx="5"/>
  <text x="600" y="175" class="node-title" text-anchor="middle">AlphaMemory</text>
  <text x="600" y="195" class="label" text-anchor="middle">:stock</text>
  <text x="600" y="210" class="detail" text-anchor="middle">pattern: {symbol: :sym?,</text>
  <text x="600" y="222" class="detail" text-anchor="middle">price: :price?}</text>

  <!-- Arrow from alpha to join -->
  <path d="M 520 190 L 370 210" class="arrow-alpha"/>

  <!-- JoinNode1 -->
  <rect x="200" y="190" width="170" height="50" class="join-box" rx="5"/>
  <text x="285" y="212" class="node-title" text-anchor="middle">JoinNode1</text>
  <text x="285" y="228" class="label" text-anchor="middle">(test: none)</text>

  <!-- Arrow to BetaMemory1 -->
  <path d="M 285 240 L 285 280" class="arrow"/>

  <!-- BetaMemory1 -->
  <rect x="170" y="280" width="230" height="60" class="beta-box" rx="5"/>
  <text x="285" y="305" class="node-title" text-anchor="middle">BetaMemory1</text>
  <text x="285" y="325" class="label" text-anchor="middle">[Token(parent: root, fact: stock(...))]</text>

  <!-- Arrow to JoinNode2 -->
  <path d="M 290 340 L 290 390" class="arrow"/>

  <!-- AlphaMemory(:threshold) on right -->
  <rect x="520" y="360" width="160" height="80" class="alpha-box" rx="5"/>
  <text x="600" y="385" class="node-title" text-anchor="middle">AlphaMemory</text>
  <text x="600" y="405" class="label" text-anchor="middle">:threshold</text>
  <text x="600" y="420" class="detail" text-anchor="middle">pattern: {symbol: :sym?,</text>
  <text x="600" y="432" class="detail" text-anchor="middle">buy_below: :threshold?}</text>

  <!-- Arrow from alpha to join -->
  <path d="M 520 400 L 380 420" class="arrow-alpha"/>

  <!-- JoinNode2 -->
  <rect x="200" y="390" width="180" height="60" class="join-box" rx="5"/>
  <text x="290" y="415" class="node-title" text-anchor="middle">JoinNode2</text>
  <text x="290" y="435" class="label" text-anchor="middle">(test: :sym? equality)</text>

  <!-- Arrow to BetaMemory2 -->
  <path d="M 290 450 L 290 490" class="arrow"/>

  <!-- BetaMemory2 -->
  <rect x="130" y="490" width="320" height="60" class="beta-box" rx="5"/>
  <text x="290" y="515" class="node-title" text-anchor="middle">BetaMemory2</text>
  <text x="290" y="535" class="label" text-anchor="middle">[Token(parent: token1, fact: threshold(...))]</text>

  <!-- Arrow to NegationNode -->
  <path d="M 295 550 L 295 600" class="arrow"/>

  <!-- AlphaMemory(:order) on right -->
  <rect x="520" y="580" width="160" height="70" class="alpha-box" rx="5"/>
  <text x="600" y="605" class="node-title" text-anchor="middle">AlphaMemory</text>
  <text x="600" y="625" class="label" text-anchor="middle">:order</text>
  <text x="600" y="640" class="detail" text-anchor="middle">pattern: {symbol: :sym?}</text>

  <!-- Arrow from alpha to negation -->
  <path d="M 520 615 L 410 625" class="arrow-alpha"/>

  <!-- NegationNode -->
  <rect x="190" y="600" width="220" height="60" class="neg-box" rx="5"/>
  <text x="300" y="625" class="node-title" text-anchor="middle">NegationNode</text>
  <text x="300" y="645" class="label" text-anchor="middle">(test: :sym? equality)</text>

  <!-- Arrow to BetaMemory3 -->
  <path d="M 300 660 L 300 700" class="arrow"/>

  <!-- BetaMemory3 -->
  <rect x="150" y="700" width="300" height="60" class="beta-box" rx="5"/>
  <text x="300" y="725" class="node-title" text-anchor="middle">BetaMemory3</text>
  <text x="300" y="745" class="label" text-anchor="middle">[Token(parent: token2, fact: nil)]</text>

  <!-- Arrow to ProductionNode -->
  <path d="M 300 760 L 300 810" class="arrow"/>

  <!-- ProductionNode -->
  <rect x="160" y="810" width="280" height="90" class="prod-box" rx="5"/>
  <text x="300" y="840" class="node-title" text-anchor="middle">ProductionNode</text>
  <text x="300" y="860" class="label" text-anchor="middle">(rule: "trading_signal")</text>
  <text x="300" y="880" class="detail" text-anchor="middle">Action: if price &lt; threshold,</text>
  <text x="300" y="892" class="detail" text-anchor="middle">BUY symbol</text>

  <!-- Legend -->
  <text x="50" y="970" class="label" style="font-size: 11px;">Network Flow:</text>
  <text x="50" y="990" class="detail">1. Dummy token starts at root</text>
  <text x="50" y="1005" class="detail">2. Join with :stock facts → tokens in Beta1</text>
  <text x="50" y="1020" class="detail">3. Join with :threshold (test :sym?) → tokens in Beta2</text>
  <text x="50" y="1035" class="detail">4. Check NO :order exists (test :sym?) → tokens in Beta3</text>
  <text x="50" y="1050" class="detail">5. Tokens reach production node → rule can fire</text>

  <text x="50" y="1080" class="label" style="font-size: 11px;">Color Key:</text>
  <rect x="150" y="1068" width="30" height="15" class="beta-box" rx="2"/>
  <text x="185" y="1080" class="detail">Beta</text>
  <rect x="230" y="1068" width="30" height="15" class="alpha-box" rx="2"/>
  <text x="265" y="1080" class="detail">Alpha</text>
  <rect x="310" y="1068" width="30" height="15" class="join-box" rx="2"/>
  <text x="345" y="1080" class="detail">Join</text>
  <rect x="390" y="1068" width="30" height="15" class="neg-box" rx="2"/>
  <text x="425" y="1080" class="detail">Negation</text>
  <rect x="490" y="1068" width="30" height="15" class="prod-box" rx="2"/>
  <text x="525" y="1080" class="detail">Production</text>
</svg>
